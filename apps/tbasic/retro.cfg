
# sxb_ram.cfg:
#	Details:
#	Zero page is where the hardware register are. What a cock-up. People who
#	remove precious zero page to try to save one cycle and one byte of code
#	ought to be hung. It would normally start at $30, but the ROM monitor
#	uses a stupid amount too, so $D0 is safe... (*cry*)

SYMBOLS
{
    __ZPSTART__:    type = export, value = $0010 ;	# Where data starts in ZP
    __DATASTART__:  type = export, value = $0700 ;	# Extra data that can't be stored in ZP
    __JUMPSTART__:  type = export, value = $0800 ;
    __CODESTART__:  type = export, value = $1000 ;	# Start of GIBL code ($E000 = EEPROM, $1000 = RAM)
    __PAGESTART__:  type = export, value = $2000 ;	# Where BASIC code starts if the OS doesn't provide any means
}

MEMORY
{
    ZP:   file = "", define = yes, start = __ZPSTART__,   size = $00D0 ;
    DATA: file = "", define = yes, start = __DATASTART__, size = $0100 ;
    JUMP: file = %O,               start = __JUMPSTART__, size = $0800, fill=yes, fillval=$0;
    CODE: file = %O,               start = __CODESTART__, size = $1000 ;

}
SEGMENTS
{
    ZEROPAGE: load = ZP,   type = zp ;
    DATA:     load = DATA, type = rw ;
    JUMP:     load = JUMP, type = rw ;
    CODE:     load = CODE, type = rw ;
}
